{"version":3,"sources":["reportWebVitals.js","Field.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Field","props","cellSize","srawing","state","height","width","nCellsHigh","nCellsWide","cells","this","divElement","clientHeight","clientWidth","Math","ceil","slice","j","i","push","x","y","setState","event","coords","toGridCoords","pageX","pageY","console","log","drawing","length","coord","floor","r","rx","ry","style","fill","stroke","strokeOpacity","class","ref","overflow","position","onMouseMove","handleMouseMove","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","renderCells","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e3ced3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from \"react\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nclass Field extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.cellSize = 30;\r\n        this.srawing = false;\r\n\r\n        this.state = {\r\n            height: 0,\r\n            width: 0,\r\n            nCellsHigh: 0,\r\n            nCellsWide: 0,\r\n            cells: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cellSize = this.cellSize;\r\n        const height = this.divElement.clientHeight;\r\n        const width = this.divElement.clientWidth;\r\n        const nCellsHigh = Math.ceil(height / cellSize);\r\n        const nCellsWide = Math.ceil(width / cellSize);\r\n        const cells = this.state.cells.slice();\r\n\r\n        for(let j = 0; j < nCellsHigh; j++){\r\n            for(let i = 0; i < nCellsWide; i++){\r\n                cells.push({\r\n                    x: i,\r\n                    y: j,\r\n                    state: 0\r\n                })\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            height: height,\r\n            width: width,\r\n            nCellsHigh: nCellsHigh,\r\n            nCellsWide: nCellsWide,\r\n            cells: cells\r\n        })\r\n    }\r\n\r\n    handleMouseDown(event){\r\n        const coords = this.toGridCoords(event.pageX, event.pageY);\r\n        console.log(\"mouseDown (\" + coords[0] + \", \" + coords[1] + \")\");\r\n        this.drawing=true;\r\n\r\n        for(let i = 0; i < this.state.cells.length; i++){\r\n            \r\n        }\r\n    }\r\n\r\n    handleMouseUp(event){\r\n        const coords = this.toGridCoords(event.pageX, event.pageY);\r\n        console.log(\"MouseUp\");\r\n        this.drawing=false;\r\n    }\r\n\r\n    handleMouseMove(event){\r\n        if(!this.drawing){\r\n            return;\r\n        }\r\n        const coord = this.toGridCoords(event.pageX, event.pageY);\r\n        //console.lg(\"MouseMove (\" + coords[0] + \", \" + coords[1] + \")\");\r\n        const cells = this.state.cells.slice();\r\n\r\n        cells[(coord[1] * this.state.nCellsWide) + coord[0]].state = 1;\r\n\r\n        this.setState({\r\n            height: this.state.height,\r\n            width: this.state.width,\r\n            nCellsHigh: this.state.nCellsHigh,\r\n            nCellsWide: this.state.nCellsWide,\r\n            cells: cells\r\n        })\r\n    }\r\n\r\n    toGridCoords(x, y){\r\n        return [Math.floor(x/this.cellSize), Math.floor(y/this.cellSize)];\r\n    }\r\n\r\n    renderCells(){\r\n        var cells = []\r\n        for(let i = 0; i < this.state.cells.length; i++){\r\n            cells.push(\r\n                <rect \r\n                    x={this.state.cells[i].x*this.cellSize}\r\n                    y={this.state.cells[i].y*this.cellSize}\r\n                    width=\"30\" height=\"30\" \r\n                    r=\"0\" rx=\"0\" ry=\"0\" \r\n                    style={{\r\n                        fill:(this.state.cells[i].state == 0 ? \"white\" : \"gray\"), \r\n                        stroke:\"#000\", \r\n                        strokeOpacity:\"0.2\",\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n        return cells;\r\n    }\r\n/*\r\npointerEvents='bounding-box'\r\nonMouseOver={() => this.handleMouseEvent(this.state.cells[i].x, this.state.cells[i].y)}\r\n*/\r\n    render(){\r\n        return (\r\n            <div \r\n                class=\"field-div\" ref={(divElement) => this.divElement = divElement}\r\n            >\r\n                <svg \r\n                    height={this.state.height} \r\n                    width={this.state.width} \r\n                    style={{overflow:'hidden', position:\"relative\"}}\r\n                    onMouseMove={(event) => this.handleMouseMove(event)}\r\n                    onMouseDown={(event) => this.handleMouseDown(event)}\r\n                    onMouseUp={(event) => this.handleMouseUp(event)}\r\n                >\r\n                    {this.renderCells()}\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Field","import Field from './Field'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div class=\"App\">\n        <Field />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Field from './Field'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Field />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}