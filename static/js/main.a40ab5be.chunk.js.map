{"version":3,"sources":["Queue.js","components/Panel.js","components/HexField.js","hex/Hex.js","App.js","reportWebVitals.js","index.js"],"names":["Queue","this","array","e","push","shift","length","isEmpty","undefined","Panel","props","handleMouseDrag","onDrag","movementX","movementY","handleMouseDown","mouseDown","window","addEventListener","handleMouseUp","removeEventListener","state","x","y","moveX","moveY","setState","className","style","left","top","onMouseDown","header","children","Component","HexField","handleMouseMove","onMouseMove","onMouseUp","coords","svgHexes","hexes","hex","size","Math","sqrt","q","r","viewOffset","w","h","points","classes","visited","transformOrigin","class","height","width","overflow","position","xmlns","fill","stroke","strokeOpacity","Hex","_q","_r","_s","NaN","s","console","assert","other","worldToHex","rq","round","rr","rs","dq","abs","dr","ds","hexRound","StateMachine","require","App","hexMap","Map","offset","mapWidth","mapHeight","hexSize","searchResults","startNode","endNode","button1Text","button2Text","button3Text","button1Enabled","button2Enabled","button3Enabled","button1Callback","button2Callback","button3Callback","stateMachine","init","transitions","name","from","to","methods","onAfterTransition","forceUpdate","onReady","onVisualizing","onPaused","onFinished","onStart","onRestart","onClear","onCancel","start","divElement","clientWidth","clientHeight","hexWidth","ceil","hexHeight","log","r_off","floor","set","toString","setButtonStates","startSearch","pauseSearch","clearWalls","restartSearch","setTimeout","visualizeStep","is","hexSetVisited","dequeue","can","finish","cancelSearch","resumeSearch","clear","enqueue","values","pause","resume","restart","cancel","event","pageX","pageY","hexSet","get","drawWall","eraseWall","finishDraw","bottom","ref","hexFieldMouseDown","hexFieldMouseMove","hexFieldMouseUp","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a40ab5be.chunk.js","sourcesContent":["class Queue{\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    enqueue(e){\r\n        this.array.push(e);\r\n    }\r\n\r\n    dequeue(){\r\n        return this.array.shift();\r\n    }\r\n\r\n    isEmpty(){\r\n        return this.array.length === 0;\r\n    }\r\n\r\n    peek(){\r\n        return !this.isEmpty() ? this.array[0] : undefined;\r\n    }\r\n\r\n    length(){\r\n        return this.array.length;\r\n    }\r\n\r\n    clear(){\r\n        this.array = [];\r\n    }\r\n}\r\n\r\n\r\nexport default Queue;","import React, {Component} from 'react';\r\nimport '../style/Panel.css'; // style sheet for the panel elements\r\n\r\nclass Panel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            x: 1000,\r\n            y: 10\r\n        }\r\n\r\n        this.mouseDown = false;\r\n    }\r\n\r\n    onDrag(moveX, moveY) {\r\n        const x = this.state.x + moveX;\r\n        const y = this.state.y + moveY;\r\n\r\n        this.setState({\r\n            x: x,\r\n            y: y\r\n        })\r\n    };\r\n\r\n    handleMouseDrag = (e) => this.onDrag(e.movementX, e.movementY);\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n        window.addEventListener('mouseup', this.handleMouseUp);\r\n        window.addEventListener('mousemove', this.handleMouseDrag);\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        this.mouseDown = false;\r\n        window.removeEventListener('mouseup', this.handleMouseUp);\r\n        window.removeEventListener('mousemove', this.handleMouseDrag);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"panel\" \r\n                style={{left: this.state.x, top: this.state.y}}\r\n                onMouseDown={(e) => this.handleMouseDown(e)}\r\n            >\r\n            <div className=\"panel-header\">\r\n                {this.props.header}\r\n            </div>\r\n            <div className=\"panel-content\">\r\n                {this.props.children}\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n    <PanelHeader \r\n    onDrag={(moveX, moveY) => this.handleDrag(moveX, moveY)} \r\n    header={this.props.header}\r\n    />\r\n*/\r\n\r\nexport default Panel;","import { Component } from 'react';\r\nimport '../style/HexField.css'\r\n\r\nclass HexField extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props;\r\n\r\n        this.handleMouseMove = (e) => this.props.onMouseMove(e);\r\n        this.handleMouseDown = (e) => this.props.onMouseDown(e);\r\n        this.handleMouseUp   = (e) => this.props.onMouseUp(e);\r\n    }\r\n\r\n    render() {\r\n        let coords = []\r\n        let svgHexes = []\r\n\r\n        for(let [key, hex] of this.props.hexes){\r\n            const x = this.props.size * (Math.sqrt(3) * hex.q + Math.sqrt(3)/2 * hex.r) + this.props.viewOffset[0];\r\n            const y = this.props.size * (3/2 * hex.r) + this.props.viewOffset[1];\r\n            const w = Math.sqrt(3) * this.props.size;\r\n            const h = 2 * this.props.size;\r\n            coords.push([x, y]);\r\n            let points = [\r\n                [             x,    y +  (0.5  * h)],\r\n                [-(0.5 * w) + x,    y +  (0.25 * h)],\r\n                [-(0.5 * w) + x,    y + -(0.25 * h)],\r\n                [             x,    y + -(0.5  * h)],\r\n                [ (0.5 * w) + x,    y + -(0.25 * h)],\r\n                [ (0.5 * w) + x,    y +  (0.25 * h)]\r\n            ]\r\n\r\n            let classes = \"hex\"\r\n            classes += (hex.state === 0 ? \" hex-air\": \" hex-wall\")\r\n            if(hex.visited){\r\n                classes = \"hex hex-visited\";\r\n            }\r\n\r\n            svgHexes.push(\r\n                    <polygon\r\n                        style={{transformOrigin:`${x}px ${y}px`}}\r\n                        points={points}\r\n                        class={classes}\r\n                    />\r\n            );\r\n        }\r\n\r\n        return(\r\n            <svg\r\n                height={this.props.height}\r\n                width = {this.props.width}\r\n                style={{overflow:'hidden', top:'0px', left:'0px', position:'absolute'}}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                onMouseMove={this.handleMouseMove}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseUp=  {this.handleMouseUp}\r\n            >\r\n                <polygon \r\n                    points={[0, 0, this.props.width, 0, this.props.width, this.props.height, 0, this.props.height]}\r\n                    fill=\"rgba(0, 0, 0, 0)\"\r\n                    stroke=\"#000\"\r\n                    strokeOpacity=\"0.2\"\r\n                />\r\n                {svgHexes}\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default HexField;","/**\r\n * This was written with the help of:\r\n * https://www.redblobgames.com/grids/hexagons/\r\n */\r\nexport class Hex {\r\n    q = NaN;\r\n    r = NaN;\r\n    s = NaN;\r\n    state = null;\r\n    visited = false;\r\n\r\n    constructor(_q, _r, _s) {\r\n        console.assert(_q + _r + _s === 0);\r\n        this.q = _q;\r\n        this.r = _r;\r\n        this.s = _s;\r\n        this.state = 0;\r\n    }\r\n\r\n    equals(other){\r\n        return (this.q === other.q && this.r === other.r && this.s === other.s);\r\n    }\r\n}\r\n\r\nexport function hexAdd(a, b) {\r\n    return Hex(a.q + b.q, a.r + b.r, a.s + b.s);\r\n}\r\n\r\nexport function hexSubtract(a, b) {\r\n    return Hex(a.q - b.q, a.r - b.r, a.s - b.s);\r\n}\r\n\r\nexport function hexMultiply(a, k) {\r\n    return Hex(a.q * k, a.r * k, a.s * k);\r\n}\r\n\r\nexport function hexLength(hex){\r\n    return Math.floor((Math.abs(hex.q) + Math.abs(hex.q) + Math.abs(hex.q)) / 2);\r\n}\r\n\r\nexport function hexDistance(a, b){\r\n    return hexLength(hexSubtract(a, b));\r\n}\r\n\r\nexport function hexRound(q, r, s){\r\n    var rq = Math.round(q);\r\n    var rr = Math.round(r);\r\n    var rs = Math.round(s);\r\n\r\n    var dq = Math.abs(rq - q);\r\n    var dr = Math.abs(rr - r);\r\n    var ds = Math.abs(rs - s);\r\n\r\n    if(dq > dr && dq > ds){\r\n        rq = -rr-rs\r\n    }\r\n    else if (dr > ds){\r\n        rr = -rq-rs\r\n    }\r\n    else {\r\n        rs = -rq-rr\r\n    }\r\n\r\n    return[rq, rr, rs];\r\n}\r\n\r\nexport function worldToHex(x, y, size){\r\n    var q = (Math.sqrt(3)/3 * x - 1/3 * y) / size;\r\n    var r = (2/3 * y) / size;\r\n    var s = (-q-r);\r\n    return (hexRound(q, r, s));\r\n}","import { Component } from 'react';\nimport Queue from './Queue'\nimport Panel from './components/Panel'\nimport HexField from './components/HexField'\nimport * as Hex from './hex/Hex'\nimport './App.css';\nvar StateMachine = require('javascript-state-machine')\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      hexMap: new Map(),\n      offset: [0, 0],\n      mapWidth: 0,\n      mapHeight: 0,\n      hexSize: 20,\n      searchResults: new Queue(),\n      startNode: null,\n      endNode: null,\n      button1Text: null,\n      button2Text: null,\n      button3Text: null,\n      button1Enabled: false,\n      button2Enabled: false,\n      button3Enabled: false,\n      button1Callback: null,\n      button2Callback: null,\n      button3Callback: null\n    }\n\n    this.stateMachine = new StateMachine({\n      init: 'none',\n      transitions: [\n        // start\n        {name: 'start',       from: 'none',   to: 'ready'},\n\n        // drawing\n        {name: 'drawWall',    from: 'ready',  to: 'drawingWalls'},                  // drawing new walls\n        {name: 'eraseWall',   from: 'ready',  to: 'erasingWalls'},                  // erasing walls\n        {name: 'finishDraw',  from:['drawingWalls', 'erasingWalls'], to: 'ready'},  // done drawing, ready to visualize\n\n        // pathfinding\n        {name: 'start',       from: 'ready',                                to: 'visualizing'},     // the algorithm is running\n        {name: 'pause',       from: 'visualizing',                          to: 'paused'},          // the visualization is paused\n        {name: 'cancel',      from: ['paused', 'finished'],                 to: 'ready'},           // cancel the search\n        {name: 'resume',      from: 'paused',                               to: 'visualizing'},     // the visualization is resumed\n        {name: 'finish',      from: 'visualizing',                          to: 'finished'},        // the program has vinished visualizing\n        {name: 'restart',     from: ['finished', 'paused', 'visualizing'],  to: 'visualizing'},     // the program is restarting the visualization\n        {name: 'clear',       from: ['ready', 'visualizing', 'paused', 'finished'],   to: 'ready'}\n\n      ],\n      methods: {\n        onAfterTransition: () => this.forceUpdate(),\n        onReady: () => this.onReady(),\n        onVisualizing: () => this.onVisualizing(),\n        onPaused: () => this.onPaused(),\n        onFinished: () => this.onFinished(),\n\n        onStart: () => this.onStart(),\n        onRestart: () => this.onRestart(),\n        onClear: () => this.onClear(),\n        onCancel: () => this.onCancel()\n      }\n    })\n  }\n\n\n  /// --==== Initiliazation ====--\n\n\n  componentDidMount(){\n    this.stateMachine.start();\n    const mapWidth = this.divElement.clientWidth;\n    const mapHeight = this.divElement.clientHeight;\n\n    const hexWidth = Math.ceil(mapWidth / (Math.sqrt(3) * this.state.hexSize)) + 1;\n    const hexHeight = Math.ceil(mapHeight / (0.75 * 2 * this.state.hexSize)) + 1;\n    console.log(hexHeight);\n    for(let r = 0; r < hexHeight; r++){\n      let r_off = Math.floor(r/2);\n      for(let q = -r_off; q < hexWidth - r_off; q++){\n        this.state.hexMap.set([q, r, -q-r].toString(), new Hex.Hex(q, r, -q-r));\n      }\n    }\n\n    this.setState({\n      mapWidth: mapWidth,\n      mapHeight: mapHeight,\n    });\n  }\n\n\n  /// --==== State Maching ====--\n\n\n  // Called on any transition\n  onTranstition(){\n    this.forceUpdate();\n  }\n\n  onReady(){\n    this.setButtonStates(\n      'Start Search', () => this.startSearch(), true,\n      'Pause Search', () => this.pauseSearch(), false,\n      'Clear Walls', () => this.clearWalls(), true);\n  }\n\n  onVisualizing(){\n    this.setButtonStates(\n      'Restart Search', () => this.restartSearch(), true,\n      'Pause Search', () => this.pauseSearch(), true,\n      'Clear Walls', () => this.clearWalls(), true);\n    setTimeout(() => this.visualizeStep(), 100);\n  }\n\n  visualizeStep(){\n    if(this.stateMachine.is('visualizing')){\n      // if the list is not empty\n      if(this.state.searchResults.length() !== 0){\n        this.hexSetVisited(this.state.searchResults.dequeue());\n              // now that the list is empty\n        if(this.state.searchResults.length() === 0){\n          // visualize path\n          if(this.stateMachine.can('finish')){\n            this.stateMachine.finish();\n          }\n        }\n        setTimeout(() => this.visualizeStep(), 100);\n      }\n    }\n  }\n\n  onPaused(){\n    this.setButtonStates(\n      'Cancel Search', () => this.cancelSearch(), true,\n      'Resume Search', () => this.resumeSearch(), true,\n      'Clear Walls', () => this.clearWalls(), true);\n  }\n\n  onFinished(){\n    this.setButtonStates(\n      'Restart Search', () => this.restartSearch(), true,\n      'Clear Path', () => this.cancelSearch(), true,\n      'Clear Walls', () => this.clearWalls(), true);\n  }\n\n  \n  onStart(){\n    console.log('pathfinding');\n    this.state.searchResults.clear();\n    for( let r = 0; r < 10; r++){\n      this.state.searchResults.enqueue([0, r, -r]);\n    }\n  }\n\n  onRestart(){\n    console.log('restarting');\n    for(let hex of this.state.hexMap.values()){\n      hex.visited = false;\n    }\n    this.state.searchResults.clear();\n    for( let r = 0; r < 10; r++){\n      this.state.searchResults.enqueue([0, r, -r]);\n    }\n  }\n\n  onClear(){\n    console.log('clearing');\n    for(let hex of this.state.hexMap.values()){\n      hex.state = 0;\n      hex.visited = false;\n    }\n  }\n\n  onCancel(){\n    console.log('canceled');\n    for(let hex of this.state.hexMap.values()){\n      hex.visited = false;\n    }\n  }\n\n\n  /// --==== Button Methods ====--\n\n  setButtonStates(\n    button1Text, button1Callback, button1Enabled, \n    button2Text, button2Callback, button2Enabled, \n    button3Text, button3Callback, button3Enabled\n    ){\n    this.setState({\n      button1Text: button1Text,\n      button2Text: button2Text,\n      button3Text: button3Text,\n      button1Enabled: button1Enabled,\n      button2Enabled: button2Enabled,\n      button3Enabled: button3Enabled,\n      button1Callback: button1Callback,\n      button2Callback: button2Callback,\n      button3Callback: button3Callback\n    });\n  }\n\n  startSearch(){\n    if(this.stateMachine.can('start')){\n      this.stateMachine.start();\n    }\n  }\n\n  pauseSearch(){\n    if(this.stateMachine.can('pause')){\n      this.stateMachine.pause();\n    }\n  }\n\n  resumeSearch(){\n    if(this.stateMachine.can('resume')){\n      this.stateMachine.resume();\n    }\n  }\n\n  restartSearch(){\n    if(this.stateMachine.can('restart')){\n      this.stateMachine.restart();\n    }\n  }\n\n  cancelSearch(){\n    if(this.stateMachine.can('cancel')){\n      this.stateMachine.cancel();\n    }\n  }\n\n  clearWalls(){\n    if(this.stateMachine.can('clear')){\n      this.stateMachine.clear();\n    }\n  }\n\n\n  /// --==== Hex Field Interaction ====--\n\n\n  hexFieldMouseMove(event){\n    var x = event.pageX - this.state.offset[0];\n    var y = event.pageY - this.state.offset[1];\n    if(this.stateMachine.is('drawingWalls')){\n      this.hexSet(Hex.worldToHex(x, y, this.state.hexSize), 1);\n    }\n    else if(this.stateMachine.is('erasingWalls')){\n      this.hexSet(Hex.worldToHex(x, y, this.state.hexSize), 0);\n    }\n    /*\n    for(let hex of this.state.hexMap.values()){\n      hex.state = 0;\n    }\n    if(hex){\n      hex.state = 1;\n    }\n    this.forceUpdate();\n    */\n    \n  }\n\n  hexFieldMouseDown(event){\n    const x = event.pageX; const y = event.pageY;\n    const hex = this.state.hexMap.get(Hex.worldToHex(x, y, this.state.hexSize).toString());\n    if(hex){\n      if(this.stateMachine.can('drawWall') && hex.state === 0){\n        this.stateMachine.drawWall();\n\n        hex.state=1;\n        this.forceUpdate();\n      }\n      else if(this.stateMachine.can('eraseWall') && hex.state !== 0){\n        this.stateMachine.eraseWall();\n\n        hex.state=0;\n        this.forceUpdate();\n      }\n    }\n  }\n\n  hexFieldMouseUp(){\n    if(this.stateMachine.can('finishDraw')){\n      this.stateMachine.finishDraw();\n    }\n  }\n\n  hexSet(coords, state){\n    const hex = this.state.hexMap.get(coords.toString());\n    if(hex){\n      hex.state = state;\n    }\n    this.forceUpdate();\n  }\n\n  hexSetVisited(coords, visited = true){\n    const hex = this.state.hexMap.get(coords.toString());\n    if(hex){\n      hex.visited = visited;\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div \n        class=\"App\" \n        style={{top: \"0px\", bottom:\"0px\", width:\"100%\", position:'absolute'}}\n        ref={(divElement) => this.divElement = divElement}\n      >\n        <div class=\"header\" />\n          <HexField \n            width={this.state.mapWidth} height ={this.state.mapHeight}\n            size={this.state.hexSize}\n            hexes={this.state.hexMap}\n            viewOffset={this.state.offset}\n            onMouseDown={(e) => this.hexFieldMouseDown(e)}\n            onMouseMove={(e) => this.hexFieldMouseMove(e)}\n            onMouseUp=  {(e) => this.hexFieldMouseUp(e)}\n          />\n          <Panel header={this.stateMachine.state}>\n            <button \n              class=\"panel-button\"\n              onClick={() => this.state.button1Callback()}\n              disabled={!this.state.button1Enabled}\n            >\n              {this.state.button1Text}\n            </button>\n            <button \n              class=\"panel-button\"\n              onClick={() => this.state.button2Callback()}\n              disabled={!this.state.button2Enabled}\n            >\n              {this.state.button2Text}\n            </button>\n            <button \n              class=\"panel-button\"\n              onClick={() => this.state.button3Callback()}\n              disabled={!this.state.button3Enabled}\n            >\n              {this.state.button3Text}\n            </button>\n          </Panel>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}